{"version":3,"sources":["fbase.js","Components/Nweet.js","Routes/Home.js","Routes/Auth.js","Routes/Profile.js","Components/Navigation.js","Components/Router.js","Components/App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","fbaseInstance","dbService","storageService","Wrapper","styled","div","NweetWrapper","NweetForm","form","NweetInput","input","NweetButton","button","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","modifiedNweet","setModifiedNweet","toggleEditClick","e","prev","onSubmit","a","preventDefault","collection","doc","id","update","onDeleteClick","window","confirm","delete","type","placeholder","value","onChange","target","onClick","src","attachmentUrl","controls","createdAt","HomeForm","HomeInput","HomeGrid","Home","userObj","nweet","setNweet","nweets","setNweets","videoUrl","setVideoUrl","fileRef","useRef","console","log","videoRef","ref","child","uid","uuidV4","putString","response","getDownloadURL","Date","now","creatorId","add","toast","success","current","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","required","accept","theFile","files","reader","FileReader","onloadend","onLoadEvent","result","currentTarget","readAsDataURL","key","AuthWrapper","AuthForm","AuthInput","AuthButton","AuthToggleButton","Auth","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","provider","auth","GoogleAuthProvider","signInWithPopup","style","left","ProfileForm","ProfileInput","ProfileButton","Profile","refreshUser","displayName","modifiedUsername","setModifiedUsername","history","useHistory","logOut","signOut","push","updateProfile","NavigationLink","Link","Navigation","to","AppRouter","isLoggedIn","path","exact","FooterWrapper","footer","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec0d507b.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBFmGurBDeqiWiDeXGbKPDTn4iiJ9G1Bhk\",\r\n    authDomain: \"clonningnwitter.firebaseapp.com\",\r\n    databaseURL: \"https://clonningnwitter.firebaseio.com\",\r\n    projectId: \"clonningnwitter\",\r\n    storageBucket: \"clonningnwitter.appspot.com\",\r\n    messagingSenderId: \"1018588368857\",\r\n    appId: \"1:1018588368857:web:769740dc1ddddf6a9a93c8\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();\r\nexport const fbaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\nconst NweetWrapper = styled.div`\r\n    video {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst NweetForm = styled.form`\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst NweetInput = styled.input`\r\n    border: 0;\r\n    outline: none;\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin-right: 10px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    &[type=\"submit\"] {\r\n        background-color: #34495e;\r\n        color: #ecf0f1;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst NweetButton = styled.button`\r\n    outline: none;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    width: 30%;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: 0;\r\n    background-color: white;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    color: rgba(231, 76, 60, 1);\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [modifiedNweet, setModifiedNweet] = useState(nweetObj.text);\r\n    const toggleEditClick = (e) => {\r\n        setModifiedNweet(nweetObj.text);\r\n        setEditing((prev) => !prev);\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setModifiedNweet(value);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.collection(\"nweets\").doc(nweetObj.id).update({\r\n            text: modifiedNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onDeleteClick = async (e) => {\r\n        const ok = window.confirm(\"are you sure delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.collection(\"nweets\").doc(nweetObj.id).delete();\r\n        }\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            {editing ? (\r\n                <NweetWrapper>\r\n                    <NweetForm onSubmit={onSubmit}>\r\n                        <NweetInput type=\"text\" placeholder=\"Edit Nweet\" value={modifiedNweet} onChange={onChange} />\r\n                        <NweetInput type=\"submit\" value=\"Edit\" />\r\n                    </NweetForm>\r\n                    <NweetButton onClick={toggleEditClick}>Cacel Editing</NweetButton>\r\n                </NweetWrapper>\r\n            ) : (\r\n                <NweetWrapper>\r\n                    <video src={nweetObj.attachmentUrl} controls />\r\n                    <h3>{nweetObj.text}</h3>\r\n                    <h5>{nweetObj.createdAt}</h5>\r\n                    {isOwner && (\r\n                        <>\r\n                            <NweetButton onClick={toggleEditClick}>Edit Nweet</NweetButton>\r\n                            <NweetButton onClick={onDeleteClick}>Delete Nweet</NweetButton>\r\n                        </>\r\n                    )}\r\n                </NweetWrapper>\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport Nweet from \"../Components/Nweet\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100%;\r\n    min-height: 80vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst HomeForm = styled.form`\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst HomeInput = styled.input`\r\n    width: 100%;\r\n    border: 0;\r\n    outline: none;\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin-right: 10px;\r\n    margin-bottom: 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    &[type=\"submit\"] {\r\n        background-color: #34495e;\r\n        color: #ecf0f1;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n    }\r\n`;\r\n\r\nconst HomeGrid = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    grid-template-rows: repeat(3, minmax(min-content, 1fr));\r\n    grid-template-columns: repeat(3, minmax(min-content, 1fr));\r\n    gap: 20px;\r\n`;\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [videoUrl, setVideoUrl] = useState(\"\");\r\n    const fileRef = useRef(null);\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNweet(value);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let attachmentUrl;\r\n\r\n        if (videoUrl !== \"\") {\r\n            console.log(videoUrl);\r\n            const videoRef = storageService.ref().child(`${userObj.uid}/${uuidV4()}`);\r\n            const response = await videoRef.putString(videoUrl, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        toast.success(\"업로드!\");\r\n        fileRef.current.value = \"\";\r\n        setNweet(\"\");\r\n        setVideoUrl(\"\");\r\n    };\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                setNweets(\r\n                    snapshot.docs.map((doc) => {\r\n                        return { id: doc.id, ...doc.data() };\r\n                    })\r\n                );\r\n            });\r\n    }, []);\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: { files },\r\n        } = e;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (onLoadEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = onLoadEvent;\r\n            setVideoUrl(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <HomeForm onSubmit={onSubmit}>\r\n                <HomeInput type=\"text\" placeholder=\"write anything what you want\" value={nweet} required onChange={onChange} />\r\n                <HomeInput type=\"file\" accept=\"video/*\" onChange={onFileChange} ref={fileRef} />\r\n                <HomeInput type=\"submit\" value=\"nweet!\" />\r\n            </HomeForm>\r\n            <HomeGrid>\r\n                {nweets.map((nweet) => {\r\n                    return <Nweet key={nweet.id} nweetObj={nweet} isOwner={userObj.uid === nweet.creatorId}></Nweet>;\r\n                })}\r\n            </HomeGrid>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, fbaseInstance } from \"../fbase\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 80vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst AuthWrapper = styled.div`\r\n    width: 50%;\r\n    height: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst AuthForm = styled.form`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst AuthInput = styled.input`\r\n    border: 0;\r\n    outline: none;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    &[type=\"submit\"] {\r\n        background-color: #34495e;\r\n        color: #ecf0f1;\r\n    }\r\n`;\r\n\r\nconst AuthButton = styled.button`\r\n    outline: none;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    padding: 10px;\r\n    width: 50%;\r\n    &:not(:last-child) {\r\n        margin: 15px 0px;\r\n    }\r\n    &:first-of-type {\r\n        background-color: #34495e;\r\n        color: #ecf0f1;\r\n    }\r\n    &:last-of-type {\r\n        background: #fc466b;\r\n        background: -webkit-linear-gradient(to right, #3f5efb, #fc466b);\r\n        background: linear-gradient(to right, #3f5efb, #fc466b);\r\n        color: #ecf0f1;\r\n    }\r\n`;\r\n\r\nconst AuthToggleButton = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    background-color: dodgerblue;\r\n    position: relative;\r\n    border-top-right-radius: 10%;\r\n    border-bottom-right-radius: 10%;\r\n    &::before {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: -100%;\r\n        background-color: firebrick;\r\n        border-top-left-radius: 10%;\r\n        border-bottom-left-radius: 10%;\r\n    }\r\n    div {\r\n        width: 125%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: -25%;\r\n        background-color: #f7f7f7;\r\n        transition: left 0.3s ease-in-out;\r\n        /* border-radius: 10%; */\r\n    }\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value },\r\n        } = e;\r\n        if (name === \"Email\") {\r\n            setEmail(value);\r\n        } else if (name === \"Password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const onClick = async (e) => {\r\n        const provider = new fbaseInstance.auth.GoogleAuthProvider();\r\n        try {\r\n            await authService.signInWithPopup(provider);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleLogin = (e) => {\r\n        const {\r\n            target: { style },\r\n        } = e;\r\n        if (newAccount) {\r\n            style.left = \"-100%\";\r\n        } else {\r\n            style.left = \"-25%\";\r\n        }\r\n        setNewAccount((prev) => !prev);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <AuthWrapper>\r\n                <AuthForm onSubmit={onSubmit}>\r\n                    <AuthInput type=\"email\" name=\"Email\" value={email} onChange={onChange} placeholder=\"email\" required />\r\n                    <AuthInput type=\"password\" name=\"Password\" value={password} onChange={onChange} placeholder=\"password\" required />\r\n                    <AuthInput type=\"submit\" value={newAccount ? \"Sign In\" : \"Log In\"} />\r\n                </AuthForm>\r\n                <AuthToggleButton>\r\n                    <div onClick={toggleLogin}></div>\r\n                </AuthToggleButton>\r\n                <AuthButton onClick={onClick}>Continue With Google</AuthButton>\r\n                <span>{error}</span>\r\n            </AuthWrapper>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Wrapper = styled.div`\r\n    height: 100%;\r\n    min-height: 80vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    border: 0;\r\n    outline: none;\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin-right: 10px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    &[type=\"submit\"] {\r\n        background-color: #34495e;\r\n        color: #ecf0f1;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n    outline: none;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    width: 30%;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: 0;\r\n    background-color: white;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    color: rgba(231, 76, 60, 1);\r\n`;\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const [modifiedUsername, setModifiedUsername] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n    const logOut = async () => {\r\n        await authService.signOut();\r\n        toast.success(\"로그아웃 되셨습니다!!!!!\");\r\n        refreshUser();\r\n\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setModifiedUsername(value);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await userObj.updateProfile({\r\n            displayName: modifiedUsername,\r\n        });\r\n        refreshUser();\r\n        toast.success(`${userObj.displayName}으로 프로필 이름이 변경되셨습니다.`);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <ProfileForm onSubmit={onSubmit}>\r\n                <ProfileInput type=\"text\" onChange={onChange} placeholder=\"your username\" value={modifiedUsername} />\r\n                <ProfileInput type=\"submit\" value=\"Edit Username\" />\r\n            </ProfileForm>\r\n            <ProfileButton onClick={logOut}>Log Out</ProfileButton>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding: 10px;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst NavigationLink = styled(Link)`\r\n    padding: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    border-radius: 10px;\r\n    color: #2c2c2c;\r\n    text-decoration: none;\r\n    position: relative;\r\n    overflow: hidden;\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: -100%;\r\n        background: linear-gradient(120deg, transparent, rgba(44, 62, 80, 0.4), transparent);\r\n        transition: all 0.4s ease-in-out;\r\n    }\r\n    &:hover {\r\n        &::before {\r\n            left: 100%;\r\n        }\r\n    }\r\n\r\n    span {\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <Wrapper>\r\n            <NavigationLink to=\"/\">\r\n                <span>Home</span>\r\n            </NavigationLink>\r\n            <NavigationLink to=\"/profile\">\r\n                <span>{userObj.displayName}의 Profile</span>\r\n            </NavigationLink>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nNavigation.propTypes = {\r\n    userObj: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Auth from \"../Routes/Auth\";\r\nimport Profile from \"../Routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <HashRouter>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route path=\"/\" exact>\r\n                            <Home userObj={userObj}></Home>\r\n                        </Route>\r\n                        <Route path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route path=\"/\" exact>\r\n                        <Auth></Auth>\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nAppRouter.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    userObj: PropTypes.object.isRequired,\r\n    refreshUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\nimport styled from \"styled-components\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../whole.css\";\n\nconst Wrapper = styled.div`\n    background-color: #ecf0f1;\n    height: 100%;\n    min-height: 80vh;\n`;\n\nconst FooterWrapper = styled.footer`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    padding: 30px 0px;\n    justify-content: center;\n    align-items: center;\n    font-size: 12px;\n    opacity: 0.3;\n    font-weight: 600;\n`;\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        if (user) {\n            setUserObj({\n                displayName: user.displayName,\n                uid: user.uid,\n                updateProfile: (args) => user.updateProfile(args),\n            });\n        } else {\n            setUserObj(null);\n        }\n    };\n    return (\n        <Wrapper>\n            {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"Initializing\"}\n            <FooterWrapper>&copy; Presuit {new Date().getFullYear()}</FooterWrapper>\n            <ToastContainer position={\"bottom-left\"} />\n        </Wrapper>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}